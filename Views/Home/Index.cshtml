
@{
    ViewBag.Title = "Index";
}
<style>
    .highcharts-figure,
    .highcharts-data-table table {
        min-width: 360px;
        max-width: 800px;
        margin: 1em auto;
    }

    .highcharts-data-table table {
        font-family: Verdana, sans-serif;
        border-collapse: collapse;
        border: 1px solid #ebebeb;
        margin: 10px auto;
        text-align: center;
        width: 100%;
        max-width: 500px;
    }

    .highcharts-data-table caption {
        padding: 1em 0;
        font-size: 1.2em;
        color: #555;
    }

    .highcharts-data-table th {
        font-weight: 600;
        padding: 0.5em;
    }

    .highcharts-data-table td,
    .highcharts-data-table th,
    .highcharts-data-table caption {
        padding: 0.5em;
    }

    .highcharts-data-table thead tr,
    .highcharts-data-table tr:nth-child(even) {
        background: #f8f8f8;
    }

    .highcharts-data-table tr:hover {
        background: #f1f7ff;
    }
</style>

<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="https://code.highcharts.com/modules/export-data.js"></script>
<script src="https://code.highcharts.com/modules/accessibility.js"></script>

<figure class="highcharts-figure">
    <div id="container"></div>
    <p class="highcharts-description">
        This chart shows how data labels can be added to the data series. This
        can increase readability and comprehension for small datasets.
    </p>
</figure>

<script>
    
    $(document).ready(function () {
        $.getJSON("/Home/GetData", function (data) {
            localStorage.setItem("cpu", data.cpuUsage);
            localStorage.setItem("memory", data.memoryUsage);
        });
        

        window.setInterval(function () {
            $.getJSON("/Home/GetData", function (data) {
                localStorage.setItem("cpu", data.cpuUsage);
                localStorage.setItem("memory", data.memoryUsage);
                console.log(data);
            });
        }, 2000);

        Highcharts.setOptions({
            global: {
                useUTC: false
            }
        });

        Highcharts.chart('container', {
            chart: {
                type: 'spline',
                events: {
                    load: function () {

                        // set up the updating of the chart each second
                        var series = this.series[0];
                        var series2 = this.series[1];
                        setInterval(function () {
                            var x = (new Date()).getTime(), // current time
                                y = parseInt(localStorage.getItem("cpu")),
                                z = parseFloat(localStorage.getItem("memory"));
                            series.addPoint([x, y], true, true);
                            series2.addPoint([x, z], true, true);
                        }, 2000);
                    }
                }
            },
            title: {
                text: 'Performance Monitor'
            },
            subtitle: {
                text: 'Testing'
            },
            xAxis: {
                type: 'datetime',
                tickPixelInterval: 150
            },
            yAxis: {
                title: {
                    text: 'Usage (%)'
                }
            },
            plotOptions: {
                line: {
                    dataLabels: {
                        enabled: true
                    },
                    enableMouseTracking: false
                }
            },
            series: [{
                name: 'CPU Usage',
                data: (function () {
                    // generate an array of random data
                    var data = [],
                        time = (new Date()).getTime(),
                        i;

                    for (i = -150; i <= 0; i += 25) {
                        data.push({
                            x: time,
                            y: parseInt(localStorage.getItem("cpu"))
                        });
                    }
                    return data;
                }())
            },
                {
                    name: 'memory Usage',
                    data: (function () {
                        // generate an array of random data
                        var data = [],
                            time = (new Date()).getTime(),
                            i;

                        for (i = -150; i <= 0; i += 25) {
                            data.push({
                                x: time,
                                z: parseFloat(localStorage.getItem("memory"))
                            });
                        }
                        return data;
                    }())
                }
            ]
        });
    });
</script>
